#pragma once

#include <string>

namespace sd
{
    namespace headder
    {
        // Adopted header fields
        // (https://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers).
        const std::string a_im = "A-IM";
        const std::string accept = "Accept";
        const std::string accept_additions = "Accept-Additions";
        const std::string accept_charset = "Accept-Charset";
        const std::string accept_datetime = "Accept-Datetime";
        const std::string accept_encoding = "Accept-Encoding";
        const std::string accept_features = "Accept-Features";
        const std::string accept_language = "Accept-Language";
        const std::string accept_patch = "Accept-Patch";
        const std::string accept_post = "Accept-Post";
        const std::string accept_ranges = "Accept-Ranges";
        const std::string age = "Age";
        const std::string allow = "Allow";
        const std::string alpn = "ALPN";
        const std::string alt_svc = "Alt-Svc";
        const std::string alt_used = "Alt-Used";
        const std::string alternates = "Alternates";
        const std::string apply_to_redirect_ref = "Apply-To-Redirect-Ref";
        const std::string authentication_control = "Authentication-Control";
        const std::string authentication_info = "Authentication-Info";
        const std::string authorization = "Authorization";
        const std::string c_ext = "C-Ext";
        const std::string c_man = "C-Man";
        const std::string c_opt = "C-Opt";
        const std::string c_pep = "C-PEP";
        const std::string c_pep_info = "C-PEP-Info";
        const std::string cache_control = "Cache-Control";
        const std::string caldav_timezones = "CalDAV-Timezones";
        const std::string close = "Close";
        const std::string content_base = "Content-Base";
        const std::string content_disposition = "Content-Disposition";
        const std::string content_encoding = "Content-Encoding";
        const std::string content_id = "Content-ID";
        const std::string content_language = "Content-Language";
        const std::string content_location = "Content-Location";
        const std::string content_md5 = "Content-MD5";
        const std::string content_range = "Content-Range";
        const std::string content_script_type = "Content-Script-Type";
        const std::string content_style_type = "Content-Style-Type";
        const std::string content_type = "Content-Type";
        const std::string content_version = "Content-Version";
        const std::string cookie = "Cookie";
        const std::string cookie2 = "Cookie2";
        const std::string dasl = "DASL";
        const std::string dav = "DAV";
        const std::string date = "Date";
        const std::string default_style = "Default-Style";
        const std::string delta_base = "Delta-Base";
        const std::string depth = "Depth";
        const std::string derived_from = "Derived-From";
        const std::string destination = "Destination";
        const std::string differential_id = "Differential-ID";
        const std::string digest = "Digest";
        const std::string etag = "ETag";
        const std::string expect = "Expect";
        const std::string expires = "Expires";
        const std::string ext = "Ext";
        const std::string forwarded = "Forwarded";
        const std::string from = "From";
        const std::string getprofile = "GetProfile";
        const std::string hobareg = "Hobareg";
        const std::string host = "Host";
        const std::string http2_settings = "HTTP2-Settings";
        const std::string im = "IM";
        const std::string if_ = "If";
        const std::string if_match = "If-Match";
        const std::string if_modified_since = "If-Modified-Since";
        const std::string if_none_match = "If-None-Match";
        const std::string if_range = "If-Range";
        const std::string if_schedule_tag_match = "If-Schedule-Tag-Match";
        const std::string if_unmodified_since = "If-Unmodified-Since";
        const std::string keep_alive = "Keep-Alive";
        const std::string label = "Label";
        const std::string last_modified = "Last-Modified";
        const std::string link = "Link";
        const std::string location = "Location";
        const std::string lock_token = "Lock-Token";
        const std::string man = "Man";
        const std::string max_forwards = "Max-Forwards";
        const std::string memento_datetime = "Memento-Datetime";
        const std::string meter = "Meter";
        const std::string mime_version = "MIME-Version";
        const std::string negotiate = "Negotiate";
        const std::string opt = "Opt";
        const std::string optional_www_authenticate = "Optional-WWW-Authenticate";
        const std::string ordering_type = "Ordering-Type";
        const std::string origin = "Origin";
        const std::string overwrite = "Overwrite";
        const std::string p3p = "P3P";
        const std::string pep = "PEP";
        const std::string pics_label = "PICS-Label";
        const std::string pep_info = "Pep-Info";
        const std::string position = "Position";
        const std::string pragma = "Pragma";
        const std::string prefer = "Prefer";
        const std::string preference_applied = "Preference-Applied";
        const std::string profileobject = "ProfileObject";
        const std::string protocol = "Protocol";
        const std::string protocol_info = "Protocol-Info";
        const std::string protocol_query = "Protocol-Query";
        const std::string protocol_request = "Protocol-Request";
        const std::string proxy_authenticate = "Proxy-Authenticate";
        const std::string proxy_authentication_info = "Proxy-Authentication-Info";
        const std::string proxy_authorization = "Proxy-Authorization";
        const std::string proxy_features = "Proxy-Features";
        const std::string proxy_instruction = "Proxy-Instruction";
        const std::string public_ = "Public";
        const std::string public_key_pins = "Public-Key-Pins";
        const std::string public_key_pins_report_only = "Public-Key-Pins-Report-Only";
        const std::string range = "Range";
        const std::string redirect_ref = "Redirect-Ref";
        const std::string referer = "Referer";
        const std::string retry_after = "Retry-After";
        const std::string safe = "Safe";
        const std::string schedule_reply = "Schedule-Reply";
        const std::string schedule_tag = "Schedule-Tag";
        const std::string sec_websocket_accept = "Sec-WebSocket-Accept";
        const std::string sec_websocket_extensions = "Sec-WebSocket-Extensions";
        const std::string sec_websocket_key = "Sec-WebSocket-Key";
        const std::string sec_websocket_protocol = "Sec-WebSocket-Protocol";
        const std::string sec_websocket_version = "Sec-WebSocket-Version";
        const std::string security_scheme = "Security-Scheme";
        const std::string server = "Server";
        const std::string set_cookie = "Set-Cookie";
        const std::string set_cookie2 = "Set-Cookie2";
        const std::string setprofile = "SetProfile";
        const std::string slug = "SLUG";
        const std::string soapaction = "SoapAction";
        const std::string status_uri = "Status-URI";
        const std::string strict_transport_security = "Strict-Transport-Security";
        const std::string surrogate_capability = "Surrogate-Capability";
        const std::string surrogate_control = "Surrogate-Control";
        const std::string tcn = "TCN";
        const std::string te = "TE";
        const std::string timeout = "Timeout";
        const std::string topic = "Topic";
        const std::string trailer = "Trailer";
        const std::string transfer_encoding = "Transfer-Encoding";
        const std::string ttl = "TTL";
        const std::string urgency = "Urgency";
        const std::string uri = "URI";
        const std::string upgrade = "Upgrade";
        const std::string user_agent = "User-Agent";
        const std::string variant_vary = "Variant-Vary";
        const std::string vary = "Vary";
        const std::string via = "Via";
        const std::string www_authenticate = "WWW-Authenticate";
        const std::string want_digest = "Want-Digest";
        const std::string warning = "Warning";
        const std::string x_frame_options = "X-Frame-Options";
        const std::string access_control = "Access-Control";
        const std::string access_control_allow_credentials = "Access-Control-Allow-Credentials";
        const std::string access_control_allow_headers = "Access-Control-Allow-Headers";
        const std::string access_control_allow_methods = "Access-Control-Allow-Methods";
        const std::string access_control_allow_origin = "Access-Control-Allow-Origin";
        const std::string access_control_max_age = "Access-Control-Max-Age";
        const std::string access_control_request_method = "Access-Control-Request-Method";
        const std::string access_control_request_headers = "Access-Control-Request-Headers";
        const std::string compliance = "Compliance";
        const std::string content_transfer_encoding = "Content-Transfer-Encoding";
        const std::string cost = "Cost";
        const std::string ediint_features = "EDIINT-Features";
        const std::string message_id = "Message-ID";
        const std::string method_check = "Method-Check";
        const std::string method_check_expires = "Method-Check-Expires";
        const std::string non_compliance = "Non-Compliance";
        const std::string optional = "Optional";
        const std::string referer_root = "Referer-Root";
        const std::string resolution_hint = "Resolution-Hint";
        const std::string resolver_location = "Resolver-Location";
        const std::string subok = "SubOK";
        const std::string subst = "Subst";
        const std::string title = "Title";
        const std::string ua_color = "UA-Color";
        const std::string ua_media = "UA-Media";
        const std::string ua_pixels = "UA-Pixels";
        const std::string ua_resolution = "UA-Resolution";
        const std::string ua_windowpixels = "UA-Windowpixels";
        const std::string version = "Version";
        const std::string x_device_accept = "X-Device-Accept";
        const std::string x_device_accept_charset = "X-Device-Accept-Charset";
        const std::string x_device_accept_encoding = "X-Device-Accept-Encoding";
        const std::string x_device_accept_language = "X-Device-Accept-Language";
        const std::string x_device_user_agent = "X-Device-User-Agent";
    } // namespace headder
} // namespace sd